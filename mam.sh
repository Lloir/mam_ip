#!/bin/bash

# Description:
# This script updates the dynamic seedbox IP on MyAnonamouse (MAM).
# It retrieves the current external IP address from a specified Docker container and updates it on MAM using their API.
# The script can accept command-line arguments for configuration but also provides default values.

# Enable logging for debugging purposes (uncomment the next line for debugging)
# set -x

# Default configurations
DEFAULT_CONTAINER_NAME="binhex-qbittorrentvpn"
DEFAULT_STATEDIR="/mnt/user/appdata/qbittorrent"
DEFAULT_CACHEFILE=""
DEFAULT_COOKIEFILE=""
DEFAULT_URL="https://t.myanonamouse.net/json/dynamicSeedbox.php"
DEFAULT_MAM_ID_COOKIE=""

# Function to display usage information
usage() {
    echo "Usage: $0 [options]

Options:
  --mam_cookie COOKIE     Set the MAM session cookie.
  --container_name NAME   Set the Docker container name. Default: $DEFAULT_CONTAINER_NAME
  --statedir DIR          Set the state directory. Default: $DEFAULT_STATEDIR
  --cachefile FILE        Set the cache file. Default: STATEDIR/MAM.ip
  --cookiefile FILE       Set the cookie file. Default: STATEDIR/MAM.cookie
  --url URL               Set the MAM API URL. Default: $DEFAULT_URL
  -h, --help              Display this help message."
}

# Parse command-line arguments
while [[ "$1" != "" ]]; do
    case $1 in
        --mam_cookie )        shift
                              MAM_ID_COOKIE="$1"
                              ;;
        --container_name )    shift
                              CONTAINER_NAME="$1"
                              ;;
        --statedir )          shift
                              STATEDIR="$1"
                              ;;
        --cachefile )         shift
                              CACHEFILE="$1"
                              ;;
        --cookiefile )        shift
                              COOKIEFILE="$1"
                              ;;
        --url )               shift
                              URL="$1"
                              ;;
        -h | --help )         usage
                              exit 0
                              ;;
        * )                   echo "Unknown option: $1"
                              usage
                              exit 1
    esac
    shift
done

# Set default values if not provided
CONTAINER_NAME="${CONTAINER_NAME:-$DEFAULT_CONTAINER_NAME}"
STATEDIR="${STATEDIR:-$DEFAULT_STATEDIR}"
CACHEFILE="${CACHEFILE:-${STATEDIR}/MAM.ip}"
COOKIEFILE="${COOKIEFILE:-${STATEDIR}/MAM.cookie}"
URL="${URL:-$DEFAULT_URL}"

# Check if MAM_ID_COOKIE is set
if [ -z "$MAM_ID_COOKIE" ]; then
    echo "Error: MAM session cookie is not set. Use --mam_cookie to set it."
    exit 1
fi

# Function to retrieve the current external IP address from Docker container
get_current_ip() {
    CURRENT_IP=$(docker exec "$CONTAINER_NAME" curl -s https://api.ipify.org)
    if [ -z "$CURRENT_IP" ]; then
        echo "Failed to retrieve current IP address from Docker container '$CONTAINER_NAME'."
        exit 1
    fi
    echo "$CURRENT_IP"
}

# Function to update the dynamic seedbox IP
update_seedbox_ip() {
    RESPONSE=$(docker exec "$CONTAINER_NAME" curl -s -b "mam_id=$MAM_ID_COOKIE" -c "$COOKIEFILE" "$URL")
    if [ -z "$RESPONSE" ]; then
        echo "Failed to get a response from the MAM API."
        exit 1
    fi
    SUCCESS=$(echo "$RESPONSE" | jq -r '.Success')
    MESSAGE=$(echo "$RESPONSE" | jq -r '.msg')

    if [ "$SUCCESS" == "true" ]; then
        echo "Success: $MESSAGE"
        echo "$CURRENT_IP" > "$CACHEFILE"
    elif [[ "$MESSAGE" == "Last change too recent" ]]; then
        echo "No change made: $MESSAGE"
        # Still update the CACHEFILE
        echo "$CURRENT_IP" > "$CACHEFILE"
    else
        echo "Failed: $MESSAGE"
        exit 1
    fi
}

# Check if jq is installed
if ! command -v jq &> /dev/null; then
    echo "Error: 'jq' is not installed. Please install jq to continue."
    exit 1
fi

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "Error: Docker is not installed or not in PATH."
    exit 1
fi

# Check if the Docker container is running
if ! docker ps --format '{{.Names}}' | grep -wq "$CONTAINER_NAME"; then
    echo "Error: Docker container '$CONTAINER_NAME' is not running."
    exit 1
fi

# Check if STATEDIR exists, if not create it
if [ ! -d "$STATEDIR" ]; then
    mkdir -p "$STATEDIR"
    if [ $? -ne 0 ]; then
        echo "Error: Failed to create directory '$STATEDIR'."
        exit 1
    fi
fi

# Check if the COOKIEFILE exists, if not create it
if [ ! -f "$COOKIEFILE" ]; then
    echo "Cookie file not found, creating a new cookie file."
    cat <<EOL > "$COOKIEFILE"
# Netscape HTTP Cookie File
# This file was generated by a script
.t.myanonamouse.net	TRUE	/	FALSE	0	mam_id	$MAM_ID_COOKIE
EOL
fi

# Retrieve the current IP address from Docker container
CURRENT_IP=$(get_current_ip)

# Update MAM.ip file regardless of IP change
echo "$CURRENT_IP" > "$CACHEFILE"

# Update the dynamic seedbox IP
update_seedbox_ip
